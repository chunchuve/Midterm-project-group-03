/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole.ManageStudents;

import UserInterface.WorkAreas.AdminRole.ManageFaculty.*;
import Faculty.FacultyProfile;
import UserInterface.WorkAreas.AdminRole.ManagePersonnelWorkResp.*;
import Persona.Address;
import UserInterface.WorkAreas.AdminRole.AdministerUserAccountsWorkResp.*;
import University.University;
import Persona.Person;
import Profile.Profile;
import Student.StudentDirectory;
import Student.StudentProfile;
import UserAccounts.UserAccount;
import UserAccounts.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vrmohanc
 */
public class UpdateStudentJPanel extends javax.swing.JPanel {
    
    JPanel CardSequencePanel;
    University university;

    
    StudentProfile selectedStudent;
    /**
     * Creates new form UpdateStudentJPanel
     */
    public UpdateStudentJPanel(JPanel jp, University university, StudentProfile student) {
        initComponents();
        this.CardSequencePanel = jp;
        this.university = university;
        this.selectedStudent = student;
       
        
        //get student info and display form
        txtPersonID.setText(selectedStudent.getPerson().getId());
        txtFirstName.setText(selectedStudent.getPerson().getFirstName());
        txtLastName.setText(selectedStudent.getPerson().getLastName());
        txtDepartment.setText(selectedStudent.getDepartment().getName());
        txtProgram.setText(selectedStudent.getProgramEnrolled());
        txtMode.setText(selectedStudent.getInstructionMode());
        txtNUID.setText(selectedStudent.getnUID());
        txtPersonID.setEnabled(false);
         //txtRole.setEnabled(false);
        txtDepartment.setEnabled(false);
        
        //display hobbies, interests;
        String hobbies, interests;
        
        if (selectedStudent.getHobbies() == null || selectedStudent.getInterests() == null) {
            
        }
        
        ArrayList<String> hobbiesList = selectedStudent.getHobbies();
        ArrayList<String> interestsList = selectedStudent.getInterests();
        
        //null check
        if (hobbiesList == null || interestsList == null) {
            txtHobbies.setText(" ");
            txtInterests.setText(" ");
        } else {
            // Convert the ArrayList to a String array 
            hobbies = String.join(", ", hobbiesList);
            interests = String.join(", ", interestsList);

            txtHobbies.setText(hobbies);
            txtInterests.setText(interests);
        }    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtPersonID = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblLastName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblDateOfBirth = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblLine1 = new javax.swing.JLabel();
        txtDepartment = new javax.swing.JTextField();
        lblLine2 = new javax.swing.JLabel();
        txtProgram = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtMode = new javax.swing.JTextField();
        txtNUID = new javax.swing.JTextField();
        lblCity1 = new javax.swing.JLabel();
        lblHobbies = new javax.swing.JLabel();
        txtHobbies = new javax.swing.JTextField();
        lblInterests = new javax.swing.JLabel();
        txtInterests = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 153, 153));

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblTitle.setText("Update Student");

        lblFirstName.setText("Person ID");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblLastName.setText("First Name*");

        lblDateOfBirth.setText("Last Name*");

        lblLine1.setText("Department");

        lblLine2.setText("Program enrolled*");

        lblCity.setText("Mode*");

        lblCity1.setText("NUID");

        lblHobbies.setText("Hobbies*");

        lblInterests.setText("Interests*");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(backButton)
                        .addGap(22, 22, 22)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblDateOfBirth)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblLine1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblLine2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMode, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblLastName)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNUID, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblHobbies, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInterests, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtHobbies, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtInterests, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap(259, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(lblFirstName)
                    .addContainerGap(590, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(lblTitle))
                .addGap(33, 33, 33)
                .addComponent(txtPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDateOfBirth))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLine1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLine2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNUID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHobbies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHobbies))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInterests, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInterests))
                .addGap(29, 29, 29)
                .addComponent(btnSave)
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(73, 73, 73)
                    .addComponent(lblFirstName)
                    .addContainerGap(428, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        
        //back to admin student form
        backAction();
    }//GEN-LAST:event_backButtonActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        //update student details
        saveFeatures();
        
       
    }//GEN-LAST:event_btnSaveActionPerformed

    private void saveFeatures() {
       
        //save student changes
        
        //check for blank input
        if (txtFirstName.getText().isBlank() || txtLastName.getText().isBlank() || 
                txtProgram.getText().isBlank() || txtMode.getText().isBlank() || txtHobbies.getText().isBlank() || txtInterests.getText().isBlank()) {
            JOptionPane.showMessageDialog(null,"All fields marked with * are mandatory");
            return;
        }
        
        if (!isValidName(txtFirstName.getText()) || txtFirstName.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "First name must be a string of alphabet", "Warning", JOptionPane.INFORMATION_MESSAGE);
            
        } else if (!isValidName(txtLastName.getText()) || txtLastName.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Last name must be a string of alphabet", "Warning", JOptionPane.INFORMATION_MESSAGE);
                
        } else if (!isValidName(txtProgram.getText())) {
            JOptionPane.showMessageDialog(this, "Program must be a string of alphabet", "Warning", JOptionPane.INFORMATION_MESSAGE);          
            
        } else if (!(txtMode.getText().equalsIgnoreCase("Online") || txtMode.getText().equalsIgnoreCase("On Campus") )) {
                JOptionPane.showMessageDialog(this, "Mode can be either \"Online\" or \"On Campus\" ", "Warning", JOptionPane.INFORMATION_MESSAGE);
        
        } else if (!txtHobbies.getText().matches("^[a-zA-Z, ]+$")) {
            JOptionPane.showMessageDialog(this, "Hobbies must be a string of alphabet. Please separate multiple hobbies with a comma.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        
        } else if (!txtInterests.getText().matches("^[a-zA-Z, ]+$")) {
            JOptionPane.showMessageDialog(this, "Interests must be a string of alphabet. Please separate multiple interests with a comma.", "Warning", JOptionPane.INFORMATION_MESSAGE);                  
                
        } else {
        selectedStudent.getPerson().setFirstName(txtFirstName.getText());
        selectedStudent.getPerson().setLastName(txtLastName.getText());
        //selectedStudent.getDepartment().setName(txtDepartment.getText());
        selectedStudent.setProgramEnrolled(txtProgram.getText());
        selectedStudent.setInstructionMode(txtMode.getText());
        selectedStudent.setnUID(txtNUID.getText());
        
        //Get hobbies and interests separated by comma
        //Store into an array list
        String hobbiesList = txtHobbies.getText();
        String[] hobbiesArray = hobbiesList.split("\\s*,\\s*"); //split by comma
 
        for (String hobby : hobbiesArray) {
            hobby = hobby.trim();
            if (!hobby.isEmpty()) {
                selectedStudent.addHobbies(hobby); //Store into StudentProfile
            }
        } 
         
        String interestsList = txtInterests.getText();
        String[] interestsArray = interestsList.split("\\s*,\\s*"); //split by comma

        for (String interest : interestsArray) {
            interest = interest.trim();
            if (!interest.isEmpty()) {
                selectedStudent.addInterests(interest); //Store into StudentProfile
            }
        } 
                
        JOptionPane.showMessageDialog(this, "Student updated successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }
    
    
    private void backAction() {
        CardSequencePanel.remove(this);
        Component[] componentArray = CardSequencePanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AdministerStudentJPanel adminStudentJPanel = (AdministerStudentJPanel) component;
        adminStudentJPanel.refreshTable();
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.previous(CardSequencePanel);
    }
    //check for valid name: expected alphabet a-z or A-Z
    private static boolean isValidName(String s){
        return s.matches("^[a-zA-Z]+$");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCity1;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblHobbies;
    private javax.swing.JLabel lblInterests;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblLine1;
    private javax.swing.JLabel lblLine2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHobbies;
    private javax.swing.JTextField txtInterests;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMode;
    private javax.swing.JTextField txtNUID;
    private javax.swing.JTextField txtPersonID;
    private javax.swing.JTextField txtProgram;
    // End of variables declaration//GEN-END:variables
}
