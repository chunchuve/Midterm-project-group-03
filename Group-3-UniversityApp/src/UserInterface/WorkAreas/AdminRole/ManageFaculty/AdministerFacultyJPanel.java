/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WorkAreas.AdminRole.ManageFaculty;

import Faculty.FacultyProfile;
import UserInterface.WorkAreas.AdminRole.ManagePersonnelWorkResp.*;
import Persona.Person;
import UserInterface.WorkAreas.AdminRole.AdministerUserAccountsWorkResp.*;
import University.University;
import Student.StudentDirectory;
import Student.StudentProfile;
import UserAccounts.UserAccount;
import UserAccounts.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *h
 * @author vrmohanc
 */

public class AdministerFacultyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form Admin person
     */
    JPanel CardSequencePanel;
    University university;
    
    FacultyProfile selectedFaculty;

    public AdministerFacultyJPanel(FacultyProfile faculty, JPanel jp, University university) {

        CardSequencePanel = jp;
        this.selectedFaculty = faculty;
        this.university = university;
        initComponents();
        
        refreshTable();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Update = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Back1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        FacultyTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(null);

        Update.setText("Update>>");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        add(Update);
        Update.setBounds(480, 290, 100, 23);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Administer Faculty");
        add(jLabel2);
        jLabel2.setBounds(21, 20, 550, 28);

        Back1.setText("<< Back");
        Back1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back1ActionPerformed(evt);
            }
        });
        add(Back1);
        Back1.setBounds(40, 290, 100, 23);

        FacultyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Person ID", "First Name", "Last Name", "Department", "Role", "Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(FacultyTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(40, 70, 560, 170);
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        
        //open update panel to edit faculty details
        int row = FacultyTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        selectedFaculty = (FacultyProfile) FacultyTable.getValueAt(row, 0);
        //System.out.println(selecteduseraccount);
        
        UpdateFacultyJPanel uuajp = new UpdateFacultyJPanel(CardSequencePanel, university, selectedFaculty);
        CardSequencePanel.add("UpdateFacultyJPanel", uuajp);
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.next(CardSequencePanel);
       
        
        

    }//GEN-LAST:event_UpdateActionPerformed

    private void Back1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back1ActionPerformed
        // TODO add your handling code here:
         //CardSequencePanel.remove(this);
        //((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
        backAction();

    }//GEN-LAST:event_Back1ActionPerformed

    private void backAction() {
        CardSequencePanel.remove(this);
        Component[] componentArray = CardSequencePanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageFacultyJPanel manageFacultyJPanel = (ManageFacultyJPanel) component;
        manageFacultyJPanel.refreshTable();
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.previous(CardSequencePanel);
    }
    
    public void refreshTable() {
            
            //clear table
            
            int rc = FacultyTable.getRowCount();
            int i;
            for (i = rc - 1; i >= 0; i--) {
                ((DefaultTableModel) FacultyTable.getModel()).removeRow(i);
            }
            
        
            //fill selected faculty details to display
            Object[] row = new Object[6];
            row[0] = selectedFaculty;
            row[1] = selectedFaculty.getPerson().getFirstName();
            row[2] = selectedFaculty.getPerson().getLastName();
            row[3] = selectedFaculty.getDepartment();
            row[4] = selectedFaculty.getRole();
            row[5] = selectedFaculty.getTitle();
                                                            
            //display nUID for found student
            //if (selecteduseraccount.getRole().equalsIgnoreCase("Student")) {
            //    StudentProfile stu = (StudentProfile) selecteduseraccount.getAssociatedPersonProfile();
            //    row[4] = stu.getnUID();
            //}
            
                                                            
            ((DefaultTableModel) FacultyTable.getModel()).addRow(row);
        
            //System.out.println(selecteduseraccount);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back1;
    private javax.swing.JTable FacultyTable;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
