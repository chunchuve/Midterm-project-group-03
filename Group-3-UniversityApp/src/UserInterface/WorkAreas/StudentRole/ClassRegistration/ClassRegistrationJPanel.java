/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.StudentRole.ClassRegistration;

import CourseSchedule.CourseOffer;
import CourseSchedule.CourseSchedule;
import Department.Department;
import Profile.Profile;
import Student.StudentProfile;
import java.awt.CardLayout;
import java.util.HashMap;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author csong
 */
public class ClassRegistrationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ClassRegistrationJPanel
     */
    
    StudentProfile student;
    Department department;
    HashMap<String, CourseSchedule> masterCourseSchedule;
    JPanel CardSequencePanel;
    public ClassRegistrationJPanel(StudentProfile s, Department d, JPanel csp) {
        initComponents();
        student = s;
        department = d;
        CardSequencePanel = csp;
        
        masterCourseSchedule = department.getMastercoursecatalog();
        populateCombo();
        populateCourseOfferTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        lblCourseOffers = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseOffers = new javax.swing.JTable();
        btnViewOrderItem = new javax.swing.JButton();
        btnRemoveOrderItem = new javax.swing.JButton();
        btnEnroll = new javax.swing.JButton();
        btnProductDetails = new javax.swing.JButton();
        lblSemester = new javax.swing.JLabel();
        cmbSemester = new javax.swing.JComboBox();
        txtSearch = new javax.swing.JTextField();
        lblItemsInCart = new javax.swing.JLabel();
        btnSearchCourse = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 204));

        lblTitle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblTitle.setText("Class Registration");

        Back.setText("<< Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        lblCourseOffers.setText("Course Offers:");

        tblCourseOffers.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        tblCourseOffers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Number", "Name", "Faculty", "Availability", "Credit Hr."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCourseOffers);

        btnViewOrderItem.setText("View Item");
        btnViewOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrderItemActionPerformed(evt);
            }
        });

        btnRemoveOrderItem.setText("Remove Enrollment");
        btnRemoveOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveOrderItemActionPerformed(evt);
            }
        });

        btnEnroll.setText("Enroll");
        btnEnroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnrollActionPerformed(evt);
            }
        });

        btnProductDetails.setText("View Course Detail");
        btnProductDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductDetailsActionPerformed(evt);
            }
        });

        lblSemester.setText("Semester:");

        cmbSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSemesterActionPerformed(evt);
            }
        });

        lblItemsInCart.setText("Current Enrollment:");

        btnSearchCourse.setText("Search Class");
        btnSearchCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCourseActionPerformed(evt);
            }
        });

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Quantity", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCart);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(Back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblCourseOffers)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnSearchCourse))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(265, 265, 265)
                                    .addComponent(btnEnroll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnProductDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                                .addComponent(lblItemsInCart)
                                .addComponent(jScrollPane2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnViewOrderItem)
                                .addGap(27, 27, 27)
                                .addComponent(btnRemoveOrderItem)))))
                .addContainerGap(230, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblTitle)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Back)
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCourseOffers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnProductDetails)
                            .addComponent(btnEnroll))
                        .addGap(20, 20, 20)
                        .addComponent(lblItemsInCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemoveOrderItem)
                            .addComponent(btnViewOrderItem))
                        .addGap(84, 84, 84))))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    // populate semester combo box
    private void populateCombo() {
        Set<String> semesters = masterCourseSchedule.keySet();
        for (String s: semesters) {
            cmbSemester.addItem(s);
        }
    }
    
    private void populateCourseOfferTable() {
        // get selected semester
        String selectedSemester = (String) cmbSemester.getSelectedItem();
        
        // validate selected semester
        if (selectedSemester == null) {
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCourseOffers.getModel();
        model.setRowCount(0);

        CourseSchedule selectedCourseSchedule = department.getCourseSchedule(selectedSemester);
        for (CourseOffer co : selectedCourseSchedule.getSchedule()) {
            Object row[] = new Object[5];
            row[0] = co.getCourseNumber();
            row[1] = co;
            
            // check faculty
            String facultyName = "Unknown";
            Profile faculty = co.getFacultyProfile();
            if (faculty != null) {
                facultyName = faculty.getPersonFullName();
            }
            row[2] = facultyName;
            row[3] = co.getSeatAvailability();
            row[4] = co.getCreditHours();
            model.addRow(row);
        }
        
    }
    
    // populate course offer by search() 
    private void populateCourseOfferTable(String keyword, String selectedSemester){
        
        
        DefaultTableModel model = (DefaultTableModel) tblCourseOffers.getModel();
        model.setRowCount(0);
        
        CourseSchedule selectedCourseSchedule = department.getCourseSchedule(selectedSemester);
        for (CourseOffer co: selectedCourseSchedule.getSchedule()) {
            // check if the course name or course number contains keyword
            if(co.toString().toLowerCase().contains(keyword.toLowerCase()) || co.getCourseNumber().toLowerCase().contains(keyword.toLowerCase())) {
                Object row[] = new Object[5];
                row[0] = co.getCourseNumber();
                row[1] = co;

                // check faculty
                String facultyName = "Unknown";
                Profile faculty = co.getFacultyProfile();
                if (faculty != null) {
                    facultyName = faculty.getPersonFullName();
                }
                row[2] = facultyName;
                row[3] = co.getSeatAvailability();
                row[4] = co.getCreditHours();
                model.addRow(row);
            }
        }
        
        
    }
    
    
    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_BackActionPerformed

    private void btnViewOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrderItemActionPerformed

    }//GEN-LAST:event_btnViewOrderItemActionPerformed

    private void btnRemoveOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveOrderItemActionPerformed

    }//GEN-LAST:event_btnRemoveOrderItemActionPerformed

    private void btnEnrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnrollActionPerformed


    }//GEN-LAST:event_btnEnrollActionPerformed

    private void btnProductDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductDetailsActionPerformed
        String selectedSemester = (String) cmbSemester.getSelectedItem();
        int selectedRowIndex = tblCourseOffers.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a course offer from the table to view", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        CourseOffer selectedCourseOffer = (CourseOffer) tblCourseOffers.getValueAt(selectedRowIndex, 1);
        ViewCourseOfferDetailJPanel vcodjp = new ViewCourseOfferDetailJPanel(selectedSemester, selectedCourseOffer, CardSequencePanel);
        CardSequencePanel.add("ViewCourseOfferDetailJPanel", vcodjp);
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.next(CardSequencePanel);
        
    }//GEN-LAST:event_btnProductDetailsActionPerformed

    private void cmbSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSemesterActionPerformed
        populateCourseOfferTable();
    }//GEN-LAST:event_cmbSemesterActionPerformed

    private void btnSearchCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCourseActionPerformed
        // get selected semester
        String selectedSemester = (String) cmbSemester.getSelectedItem();
        
        // validate selected semester
        if (selectedSemester == null) {
            JOptionPane.showMessageDialog(this, "Please select a semester to search for course.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // validate keyword
        String keyword = txtSearch.getText();
        if(keyword.isBlank()) {
            JOptionPane.showMessageDialog(this, "Please type keywords for course name or course number.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        populateCourseOfferTable(keyword, selectedSemester);
    }//GEN-LAST:event_btnSearchCourseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton btnEnroll;
    private javax.swing.JButton btnProductDetails;
    private javax.swing.JButton btnRemoveOrderItem;
    private javax.swing.JButton btnSearchCourse;
    private javax.swing.JButton btnViewOrderItem;
    private javax.swing.JComboBox cmbSemester;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCourseOffers;
    private javax.swing.JLabel lblItemsInCart;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCart;
    private javax.swing.JTable tblCourseOffers;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables




}
