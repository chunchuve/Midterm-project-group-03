/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.StudentRole.CourseWork;

import CourseSchedule.CourseLoad;
import CourseSchedule.SeatAssignment;
import Profile.Profile;
import Student.StudentProfile;
import Student.Transcript;
import UserInterface.WorkAreas.StudentRole.StudentWorkAreaJPanel;
import java.awt.CardLayout;
import java.util.Date;
import java.util.Set;
import java.util.Stack;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author csong
 */
public class StudentCourseWorkJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentCourseWorkJPanel
     */
    StudentProfile student;
    JPanel CardSequencePanel;
    Transcript transcript;
    Set<String> semesters;
    StudentWorkAreaJPanel swajp;
    public StudentCourseWorkJPanel(StudentProfile s, JPanel csp, StudentWorkAreaJPanel swajp) {
        initComponents();
        this.swajp = swajp;
        student = s;
        CardSequencePanel = csp;
        transcript = student.getTranscript();
        
        
        populateCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        Back2 = new javax.swing.JButton();
        lblSemester = new javax.swing.JLabel();
        cmbSemester = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCourseLoad = new javax.swing.JTable();
        lblEnroll = new javax.swing.JLabel();
        btnCourseDetails = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        lblTitle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblTitle.setText("Manage Coursework");

        Back2.setText("<< Back");
        Back2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back2ActionPerformed(evt);
            }
        });

        lblSemester.setText("Semester:");

        cmbSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSemesterActionPerformed(evt);
            }
        });

        tblCourseLoad.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        tblCourseLoad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Number", "Name", "Faculty", "Credit Hours"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblCourseLoad);
        if (tblCourseLoad.getColumnModel().getColumnCount() > 0) {
            tblCourseLoad.getColumnModel().getColumn(1).setMinWidth(200);
        }

        lblEnroll.setText("Enrolled Courses:");

        btnCourseDetails.setText("View Course Detail");
        btnCourseDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCourseDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(Back2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCourseDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lblEnroll)
                                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblEnroll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(btnCourseDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Back2)
                .addGap(95, 95, 95))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateCombo() {
        //Set<String> semesters = masterCourseSchedule.keySet();
        
        semesters = transcript.getMasterCourseloadlist().keySet();
        for (String s: semesters) {
            cmbSemester.addItem(s);
        }
    }

    private void populateCourseLoadTable() {
        String selectedSemester = (String) cmbSemester.getSelectedItem();
        // validate selected semester
        if (selectedSemester == null) {
            return;
        }
        
        // check if courseload for this semester existed, if not, create a courseload
        CourseLoad currentCourseLoad = transcript.getCourseLoadBySemester(selectedSemester);
        if(currentCourseLoad == null) {
            currentCourseLoad = transcript.newCourseLoad(selectedSemester);
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCourseLoad.getModel();
        model.setRowCount(0);
        
        for (SeatAssignment s: currentCourseLoad.getSeatAssignments()) {
            Object row[] = new Object[4];
                row[0] = s.getCourseOffer().getCourseNumber();
                row[1] = s;

                // check faculty
                String facultyName = "Unknown";
                Profile faculty = s.getCourseOffer().getFacultyProfile();
                if (faculty != null) {
                    facultyName = faculty.getPersonFullName();
                }
                row[2] = facultyName;
                row[3] = s.getCourseOffer().getCreditHours();
                model.addRow(row);
        }
    }
    
    private void Back2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back2ActionPerformed
        // TODO add your handling code here:
        Stack<String> historyStack = swajp.getHistoryStack();
        JPanel csp = swajp.getCardSequencePanel();
        if (!historyStack.empty()) {
            String previousKey = historyStack.pop();
            CardLayout layout = (CardLayout) csp.getLayout();
            layout.show(csp, previousKey);
            csp.remove(this);
        }else {
            // go to student main frame
            CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
            layout.show(CardSequencePanel, "StudentWorkAreaJPanel");
        }
    }//GEN-LAST:event_Back2ActionPerformed

    private void cmbSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSemesterActionPerformed
        populateCourseLoadTable();
    }//GEN-LAST:event_cmbSemesterActionPerformed

    private void btnCourseDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCourseDetailsActionPerformed
        String selectedSemester = (String) cmbSemester.getSelectedItem();

        int selectedRowIndex = tblCourseLoad.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a course from the table to view", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        SeatAssignment selectedSA = (SeatAssignment) tblCourseLoad.getValueAt(selectedRowIndex, 1);
        
        swajp.getHistoryStack().push("StudentCourseWorkJPanel");
        ViewCourseWorkJPanel vcodjp = new ViewCourseWorkJPanel(selectedSA, CardSequencePanel, swajp);
        CardSequencePanel.add("ViewCourseWorkJPanel", vcodjp);
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.show(CardSequencePanel, "ViewCourseWorkJPanel");

    }//GEN-LAST:event_btnCourseDetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back2;
    private javax.swing.JButton btnCourseDetails;
    private javax.swing.JComboBox cmbSemester;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblEnroll;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCourseLoad;
    // End of variables declaration//GEN-END:variables


}
